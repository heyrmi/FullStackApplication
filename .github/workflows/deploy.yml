name: CD

on:
  push:
    branches:
      - "master"

  workflow_dispatch:

env:
  #PostgreSQL Service Container
  POSTGRESQL_VERSION: 14.5
  POSTGRESQL_DB: cardb
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: password

  #Java Version
  JAVA_VERSION: 17

  #DockerHub
  DOCKER_HUB_USERNAME: heyrmi

  #AWS
  EB_ENVIRONMENT_NAME: Fullstackapplication-env
  EB_APPLICATION_NAME: fullstackapplication
  DEPLOYMENT_PACKAGE: docker/docker-compose.yml
  AWS_REGION: us-east-1

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Java Setup
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"

      - name: Test
        run: |
          ./mvnw clean test --no-transfer-progress

  native-build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          version: "22.3.0"
          java-version: ${{ env.JAVA_VERSION }}
          components: "native-image"
          github-token: ${{ secrets.PAT }}

      - name: Native-image
        run: |
          ./mvnw clean package --no-transfer-progress -DskipTests=true \
          -P build-frontend

      - name: Upload Image
        uses: actions/upload-artifact@v3
        with:
          name: Native-Image
          path: target/*.jar

  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Java Setup
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"

      - name: Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%-H.%-M')" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Maven Clean package & Push to DockerHub
        run: |
          ./mvnw clean package --no-transfer-progress -DskipTests=true \
          -P build-frontend \
          -P jib-push-to-dockerhub \
          -Dapp.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }}

      - name: Write build-number
        shell: bash
        run: |
          expr ${{ steps.build-number.outputs.BUILD_NUMBER }} > build-number.txt

      - name: Upload build-number
        uses: actions/upload-artifact@v3
        with:
          name: Build-Number
          path: build-number.txt

  update:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Download build-number
        uses: actions/download-artifact@v3
        with:
          name: Build-Number

      - name: Update App Version
        run: |
          BUILD_NO=`cat build-number.txt`
          echo -e "Current docker/docker-compose.yml: \n$(cat docker/docker-compose.yml)"
          sed -i -E 's_(heyrmi/full-stack-application:)([^"]*)_\1'${BUILD_NO}'_' docker/docker-compose.yml
          echo -e "Modified docker/docker-compose.yml: \n$(cat docker/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docker/docker-compose.yml
          git commit -m "Updated new app version: ${BUILD_NO}"
          git push

  deploy:
    needs: [update]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Take latest pull
        run: |
          git pull

      - name: Image version
        run: |
          echo -e "Latest docker/docker-compose.yml: \n$(cat docker/docker-compose.yml)"

      - name: Download build-number
        uses: actions/download-artifact@v3
        with:
          name: Build-Number

      - name: Build
        id: build
        run: |
          echo "BUILD=$(cat build-number.txt)" >> $GITHUB_OUTPUT

      - name: Deployment
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build.outputs.BUILD }}
          version_description: New version ${{ steps.build.outputs.BUILD }} deployed by Github Actions ${{github.SHA}}
          region: ${{ env.AWS_REGION }}
          deployment_package: ${{ env.DEPLOYMENT_PACKAGE }}
